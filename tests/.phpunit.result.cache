C:37:"PHPUnit\Runner\DefaultTestResultCache":11588:{a:2:{s:7:"defects";a:0:{}s:5:"times";a:127:{s:76:"tests\algorithms\math\ArmstrongNumberTest::testIsArmstrongNumberWithOneDigit";d:0.006;s:77:"tests\algorithms\math\ArmstrongNumberTest::testIsArmstrongNumberWithTwoDigits";d:0;s:70:"tests\algorithms\math\ArmstrongNumberTest::testIsArmstrongNumberAsTrue";d:0;s:71:"tests\algorithms\math\ArmstrongNumberTest::testIsArmstrongNumberAsTrue2";d:0;s:71:"tests\algorithms\math\ArmstrongNumberTest::testIsArmstrongNumberAsFalse";d:0;s:60:"tests\algorithms\math\CalculatorTest::testItCanAddTwoNumbers";d:0;s:65:"tests\algorithms\math\CalculatorTest::testItCanSubtractTwoNumbers";d:0;s:75:"tests\algorithms\math\CalculatorTest::testIfCanTellIfTwoNumbersAreDivisible";d:0;s:78:"tests\algorithms\math\CalculatorTest::testIfCanTellIfTwoNumbersAreNotDivisible";d:0;s:70:"algorithms\math\CheckSumFiveNumbersTest::testEfficientApproachWithNull";d:0;s:62:"algorithms\math\CheckSumFiveNumbersTest::testEfficientApproach";d:0;s:70:"algorithms\math\CheckSumFiveNumbersTest::testEfficientApproachLessOnes";d:0;s:59:"tests\algorithms\math\FactorialTest::testFactorialRecursive";d:0.001;s:55:"tests\algorithms\math\LeapYearsTest::testNormalLeapYear";d:0.001;s:57:"tests\algorithms\math\LeapYearsTest::testNormalCommonYear";d:0;s:59:"tests\algorithms\math\LeapYearsTest::testAtypicalCommonYear";d:0;s:57:"tests\algorithms\math\LeapYearsTest::testAtypicalLeapYear";d:0;s:52:"tests\algorithms\math\LeapYearsTest::testInvalidYear";d:0.001;s:61:"test\algorithms\math\MathematicalLibraryTest::testItCanDouble";d:0;s:68:"test\algorithms\math\MathematicalLibraryTest::testItCanDoubleAndSave";d:0.001;s:73:"test\algorithms\math\PrimeFactorsTest::testThatOneDoesNotHavePrimeFactors";d:0.001;s:68:"test\algorithms\math\PrimeFactorsTest::testItComputesPrimeFactorsOf2";d:0;s:68:"test\algorithms\math\PrimeFactorsTest::testItComputesPrimeFactorsOf3";d:0;s:50:"algorithms\search\DeepFirstSearchTest::testGetNode";d:0;s:57:"tests\algorithms\strings\AnagramTest::testIsAnagramIsTrue";d:0;s:57:"tests\algorithms\strings\AnagramTest::testIsAnagramIsFals";d:0;s:63:"tests\algorithms\strings\FizzBuzzSimpleTest::testNormalInputSet";d:0;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #0";d:0.001;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #1";d:0;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #2";d:0;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #3";d:0;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #4";d:0;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #5";d:0;s:82:"tests\algorithms\strings\FizzBuzzTest::testNumberIsMappedToResult with data set #6";d:0;s:56:"tests\algorithms\strings\NumbersInWordsTest::testConvert";d:0.001;s:88:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor1";d:0;s:88:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor2";d:0;s:88:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor4";d:0;s:88:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor5";d:0;s:88:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor6";d:0;s:88:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor9";d:0;s:89:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor10";d:0;s:89:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor11";d:0;s:89:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor20";d:0;s:89:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor50";d:0;s:90:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor100";d:0;s:90:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor500";d:0;s:91:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor1000";d:0;s:91:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor1999";d:0;s:91:"tests\algorithms\strings\RomanNumeralsConverterTest::testItCalculatesTheRomanNumeralFor4990";d:0;s:81:"tests\algorithms\strings\RomanNumeralsConverterTest::testItTakesExceptionWithZero";d:0;s:84:"tests\algorithms\strings\StringCalculatorTest::testItTranslatesAnEmptyStringIntoZero";d:0;s:75:"tests\algorithms\strings\StringCalculatorTest::testItFindsTheSumOfOneNumber";d:0;s:83:"tests\algorithms\strings\StringCalculatorTest::test_it_finds_the_sum_of_two_numbers";d:0;s:93:"tests\algorithms\strings\StringCalculatorTest::test_it_finds_the_sum_of_any_amount_of_numbers";d:0;s:81:"tests\algorithms\strings\StringCalculatorTest::test_it_disallows_negative_numbers";d:0;s:105:"tests\algorithms\strings\StringCalculatorTest::test_it_ignores_any_number_that_is_one_thousand_or_greater";d:0;s:85:"tests\algorithms\strings\StringCalculatorTest::test_it_allows_for_new_line_delimiters";d:0;s:68:"test\code_katas\games\BowlingGameTest::testItScoresAGutterGameAsZero";d:0.001;s:85:"test\code_katas\games\BowlingGameTest::testItScoresTheSumOfAllKnockedDownPinsForAGame";d:0;s:77:"test\code_katas\games\BowlingGameTest::testItAwardsAOneRollBonusForEverySpare";d:0;s:92:"test\code_katas\games\BowlingGameTest::testItAwardsATwoRollBonusForAStrikeInThePreviousFrame";d:0;s:63:"test\code_katas\games\BowlingGameTest::testItScoresAPerfectGame";d:0;s:75:"test\code_katas\games\BowlingGameTest::testItTakesExceptionWithInvalidRolls";d:0;s:58:"test\code_katas\games\MasterMindTest::testFirstGuessIsAAAA";d:0;s:70:"test\code_katas\games\MasterMindTest::test_ifScoreIsPerfectBreakerYays";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #0";d:0.001;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #1";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #2";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #3";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #4";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #5";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #6";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #7";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #8";d:0;s:94:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectBreakerDoesntYay with data set #9";d:0;s:99:"test\code_katas\games\MasterMindTest::test_ifScoreIsntPerfectNewGuessIsDifferentFromAllPreviousOnes";d:0;s:58:"test\code_katas\games\MasterMindTest::test_guessesAreValid";d:0;s:60:"test\code_katas\games\TennisTest::testItScoresAScorelessGame";d:0.001;s:56:"test\code_katas\games\TennisTest::testItScoresA_1_0_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_2_0_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_3_0_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_4_0_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_0_4_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_4_3_Game";d:0;s:57:"test\code_katas\games\TennisTest::testItScores_A_4_4_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_8_8_Game";d:0;s:56:"test\code_katas\games\TennisTest::testItScoresA_8_9_Game";d:0;s:58:"test\code_katas\games\TennisTest::testItScores_A_8_10_Game";d:0;s:62:"tests\data_structures\closure\ClosureNumberSampleTest::testMul";d:0.001;s:60:"tests\data_structures\closure\ClosureSampleTest::testGetsFoo";d:0;s:60:"tests\data_structures\closure\ClosureSampleTest::testGetiFoo";d:0;s:111:"tests\design_patterns\behavioral\chain_of_responsability\ChainOfResponsabilityBookTest::testBeforeSetTitleIsSet";d:0.001;s:107:"tests\design_patterns\behavioral\chain_of_responsability\ChainOfResponsabilityBookTest::testAfterTitleIsSet";d:0;s:79:"tests\design_patterns\behavioral\command\CommandBookTest::testBookAfterCreation";d:0;s:78:"tests\design_patterns\behavioral\command\CommandBookTest::testBookAfterStarsOn";d:0.001;s:79:"tests\design_patterns\behavioral\command\CommandBookTest::testBookAfterStarsOff";d:0;s:87:"tests\design_patterns\behavioral\command\InterpreterBookTest::testInvalidRequestMissing";d:0.001;s:88:"tests\design_patterns\behavioral\command\InterpreterBookTest::testValidBookAuthorRequest";d:0;s:87:"tests\design_patterns\behavioral\command\InterpreterBookTest::testValidBookTitleRequest";d:0;s:93:"tests\design_patterns\behavioral\command\InterpreterBookTest::testValidBookAuthorTitleRequest";d:0;s:101:"tests\design_patterns\behavioral\command\InterpreterBookTest::testInvalidRequestWithInvalidBookNumber";d:0;s:104:"tests\design_patterns\behavioral\command\InterpreterBookTest::testInvalidRequestWithNonNumericBookNumber";d:0;s:91:"tests\design_patterns\behavioral\iterator\IteratorBookTest::testGettingNextBookWithIterator";d:0.001;s:94:"tests\design_patterns\behavioral\iterator\IteratorBookTest::testGettingCurrentBookWithIterator";d:0;s:98:"tests\design_patterns\behavioral\iterator\IteratorBookTest::testGettingNextBookWithReverseIterator";d:0;s:101:"tests\design_patterns\behavioral\iterator\IteratorBookTest::testGettingCurrentBookWithReverseIterator";d:0;s:89:"tests\design_patterns\behavioral\mediator\MediatorBookTest::testGetOriginalAuthorAndTitle";d:0.001;s:89:"tests\design_patterns\behavioral\mediator\MediatorBookTest::testAfterAuthorSetToLowerCase";d:0;s:88:"tests\design_patterns\behavioral\mediator\MediatorBookTest::testAfterTitleSetToUpperCase";d:0;s:82:"testts\design_patterns\behavioral\memento\MementoBookTest::testBookReaderAfterTypo";d:0.001;s:91:"testts\design_patterns\behavioral\memento\MementoBookTest::testBookReaderBackToOnePageLater";d:0;s:91:"design_patterns\behavioral\memento\MementoRestorableIteratorTest::testIteratorBeforeRestore";d:0.001;s:90:"design_patterns\behavioral\memento\MementoRestorableIteratorTest::testIteratorAfterRestore";d:0;s:75:"design_patterns\behavioral\null_object\AnimalsWikipediaTest::testDogCanWoof";d:0.001;s:75:"design_patterns\behavioral\null_object\AnimalsWikipediaTest::testCatCanMeow";d:0;s:87:"design_patterns\behavioral\null_object\AnimalsWikipediaTest::testNullAnimalMakesNoSound";d:0.001;s:122:"tests\design_patterns\behavioral\observer\sourcemaking\ObserverSourcemakingTest::testNotificationListContainsNotifications";d:0.001;s:105:"tests\design_patterns\behavioral\observer\sourcemaking\ObserverSourcemakingTest::testFavoritesAfterDetach";d:0;s:75:"tests\design_patterns\behavioral\state\book\BookStateTest::testGetBookTitle";d:0.001;s:83:"design_patterns\creational\abstract_factory\CarFactoryTest::testFactoryCanCreateCar";d:0.001;s:86:"design_patterns\creational\abstract_factory\CarFactoryTest::testFactoryCannotCreateCar";d:0;s:75:"design_patterns\creational\abstract_factory\CarFactoryTest::testFerrariType";d:0;s:79:"design_patterns\creational\abstract_factory\CarFactoryTest::testLamborghiniType";d:0;s:48:"test\math\PalindromeTest::testIsPalindromeNumber";d:0;s:42:"test\math\PalindromeTest::testIsPalindrome";d:0;s:51:"test\math\PalindromeTest::testIsPalindromeRecursive";d:0;}}}